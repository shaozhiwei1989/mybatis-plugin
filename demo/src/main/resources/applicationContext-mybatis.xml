<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.0.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
       http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.0.xsd">
	<context:property-placeholder location="classpath*:jdbc.properties" ignore-unresolvable="true" />
	
	
	<bean id="log-filter" class="com.alibaba.druid.filter.logging.CommonsLogFilter">
        <property name="resultSetLogEnabled" value="true" />
        <property name="statementExecutableSqlLogEnable" value="true" />
    </bean>

    <bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
        <property name="slowSqlMillis" value="3000" />
        <property name="logSlowSql" value="true" />
        <property name="mergeSql" value="true" />
    </bean>

    <bean id="wall-filter-config" class="com.alibaba.druid.wall.WallConfig" init-method="init">
        <property name="dir" value="META-INF/druid/wall" />
        <property name="selectWhereAlwayTrueCheck" value="false" />
        <property name="selectHavingAlwayTrueCheck" value="false" />
    </bean>

    <bean id="wall-filter" class="com.alibaba.druid.wall.WallFilter">
        <property name="dbType" value="${jdbc.dbType}" />
        <property name="config" ref="wall-filter-config" />
    </bean>
    
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" abstract="true" init-method="init" destroy-method="close">
		<property name="initialSize" value="${jdbc.initialSize}" />
		<property name="minIdle" value="${jdbc.minIdle}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" />
		<property name="validationQuery" value="SELECT 1" />
		<property name="testWhileIdle" value="true" />
		<property name="poolPreparedStatements" value="true" />
		<property name="removeAbandoned" value="true" />
        <property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}" />
        <property name="logAbandoned" value="true" />
	    
        <property name="proxyFilters">
            <list>
                <ref bean="stat-filter" />
                <ref bean="wall-filter" />
                <ref bean="log-filter" />
            </list>
        </property>
    </bean>
	
	<bean id="dataSource_0" class="com.alibaba.druid.pool.DruidDataSource" parent="dataSource">
		<property name="driverClassName" value="${jdbc0.driver}" />
		<property name="url" value="${jdbc0.url}" />
		<property name="username" value="${jdbc0.username}" />
		<property name="password" value="${jdbc0.password}" />
	</bean>

	<bean id="dataSource_1" class="com.alibaba.druid.pool.DruidDataSource" parent="dataSource">
		<property name="driverClassName" value="${jdbc1.driver}" />
		<property name="url" value="${jdbc1.url}" />
		<property name="username" value="${jdbc1.username}" />
		<property name="password" value="${jdbc1.password}" />
	</bean>
	
	<bean  id="dynamicDataSource" class="com.nicomama.datasource.DynamicDataSource">
		<property name="defaultDataSource" ref="dataSource_1"/>
		<property name="dataSourceMap">
			<map>
				<entry key="dataSource_0" value-ref="dataSource_0"/>
				<entry key="dataSource_1" value-ref="dataSource_1"/>
			</map>
		</property>
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dynamicDataSource" />
		<property name="configLocation" value="classpath:sqlMapConfig.xml"></property>
		<property name="mapperLocations" value="classpath:mapper/mysql/**/*Mapper.xml"></property>
	</bean>

	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dynamicDataSource" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	      <property name="basePackage" value="com.nicomama.**.dao" />
 	      <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" /> 
	</bean>
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dynamicDataSource" />
	</bean>
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">	
		<constructor-arg index="0" ref="sqlSessionFactory"/>
	</bean>

	<bean id="pointcut" class ="com.nicomama.spring.RegexpMethodPointcutAdvisor">
		<constructor-arg index="0" value="com.nicomama.*.dao.*"/>
	</bean>

</beans>